apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: calico-monitoring
  labels:
    app: prometheus
    purpose: example
    role: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
      purpose: example
  template:
    metadata:
      labels:
        app: prometheus
        purpose: example
      annotations:
        ad.datadoghq.com/prometheus-example.check_names: |
          ["openmetrics"]
        ad.datadoghq.com/prometheus-example.init_configs: |
          [{}]
        ad.datadoghq.com/prometheus-example.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:%%port%%/metrics",
              "namespace": "documentation_example_kubernetes",
              "metrics": [ {"promhttp_metric_handler_requests_total": "prometheus.handler.requests.total"}]
            }
          ]
    spec:
      serviceAccountName: calico-prometheus-user
      containers:
        - name: prometheus-dd-pod
          image: prom/prometheus
          resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          ports:
            - containerPort: 9090
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config

---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-example-service
spec:
  selector:
    app: prometheus
    purpose: example
  ports:
    - name: promui
      protocol: TCP
      port: 9090
      targetPort: 9090

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: calico-monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval:   15s
      external_labels:
        monitor: 'tutorial-monitor'
    scrape_configs:
    - job_name: 'prometheus'
      scrape_interval: 5s
      static_configs:
      - targets: ['localhost:9090']
    - job_name: 'felix_metrics'
      scrape_interval: 5s
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: felix-metrics-svc
        replacement: $1
        action: keep
    - job_name: 'typha_metrics'
      scrape_interval: 5s
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: typha-metrics-svc
        replacement: $1
        action: keep
    - job_name: 'kube_controllers_metrics'
      scrape_interval: 5s
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: kube-controllers-metrics-svc
        replacement: $1
        action: keep
